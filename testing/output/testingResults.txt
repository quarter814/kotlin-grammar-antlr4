Testing AbsentInnerType.kt...
line 1:9 no viable alternative at input '()?'
Result: 1 syntax errors

Testing AnonymousInitializer.kt...
Result: 0 syntax errors

Testing AssertNotNull.kt...
line 6:11 no viable alternative at input 'true!!!\n'
line 7:4 extraneous input 'true' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing BabySteps.kt...
Result: 0 syntax errors

Testing BabySteps_ERR.kt...
line 3:45 extraneous input ',' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
Result: 1 syntax errors

Testing BackslashInString.kt...
line 4:0 no viable alternative at input '"\\n}\n'
Result: 1 syntax errors

Testing BlockCommentAtBeginningOfFile1.kt...
line 1:0 mismatched input '/' expecting {<EOF>, NL, '@', '@file', 'package', 'import', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 1 syntax errors

Testing BlockCommentAtBeginningOfFile2.kt...
line 1:0 mismatched input '/' expecting {<EOF>, NL, '@', '@file', 'package', 'import', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 1 syntax errors

Testing BlockCommentAtBeginningOfFile3.kt...
line 1:0 mismatched input '/' expecting {<EOF>, NL, '@', '@file', 'package', 'import', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 1 syntax errors

Testing BlockCommentAtBeginningOfFile4.kt...
line 5:0 extraneous input 'asdfas' expecting {<EOF>, NL, '@', '@file', 'package', 'import', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 1 syntax errors

Testing BlockCommentUnmatchedClosing_ERR.kt...
line 2:4 no viable alternative at input '\n*'
line 2:4 extraneous input '*' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing ByClauses.kt...
Result: 0 syntax errors

Testing CallsInWhen.kt...
line 10:8 no viable alternative at input 'when(a){\na.foo->a\na.foo()->a\na.foo<T>->a\na.foo<T>(a)->a\na.foo<T>(a,d)->a\na.{bar}->a\na.{!bar}->a\na.{->'
line 3:4 extraneous input 'a' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing CallWithManyClosures.kt...
Result: 0 syntax errors

Testing CollectionLiterals.kt...
line 2:4 no viable alternative at input '\n['
line 2:4 extraneous input '[' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing CollectionLiterals_ERR.kt...
line 2:4 no viable alternative at input '\n['
line 2:4 extraneous input '[' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing CommentsBinding.kt...
line 73:19 extraneous input '=' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 1 syntax errors

Testing CommentsBindingInLambda.kt...
Result: 0 syntax errors

Testing CommentsBindingInStatementBlock.kt...
Result: 0 syntax errors

Testing Constructors.kt...
line 5:0 extraneous input 'protected' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 5:28 no viable alternative at input 'private('
line 7:30 no viable alternative at input 'private('
Result: 3 syntax errors

Testing ControlStructures.kt...
line 68:7 no viable alternative at input 'for(val'
line 68:13 extraneous input 'in' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 70:23 extraneous input 'in' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 91:6 no viable alternative at input '\nb'
line 91:6 extraneous input 'b' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 5 syntax errors

Testing DefaultKeyword.kt...
line 26:0 extraneous input 'companion' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 28:0 extraneous input 'companion' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 63:0 extraneous input 'companion' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 63:16 mismatched input '{' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
Result: 4 syntax errors

Testing destructuringInLambdas.kt...
Result: 0 syntax errors

Testing destructuringInLambdas_ERR.kt...
line 2:19 no viable alternative at input 'a8.filter{((x,'
line 3:4 extraneous input 'a9' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing DocCommentAfterFileAnnotations.kt...
Result: 0 syntax errors

Testing DocCommentForFirstDeclaration.kt...
Result: 0 syntax errors

Testing DocCommentOnPackageDirectiveLine.kt...
Result: 0 syntax errors

Testing DocCommentsBinding.kt...
Result: 0 syntax errors

Testing DoubleColon.kt...
line 41:8 no viable alternative at input 'this::'
line 42:4 extraneous input 'super' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 43:7 extraneous input '::' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 44:4 extraneous input 'object' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 44:13 extraneous input '::' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 45:0 extraneous input '}' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 47:0 extraneous input 'fun' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 48:4 no viable alternative at input '\nthis@'
line 48:4 extraneous input 'this@' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 9 syntax errors

Testing DoubleColonWhitespaces.kt...
Result: 0 syntax errors

Testing DoubleColon_ERR.kt...
line 2:8 no viable alternative at input 'a::b('
line 3:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 6:10 no viable alternative at input 'a.b::c('
line 7:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 11:0 no viable alternative at input 'A::\n}'
line 11:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 15:0 no viable alternative at input '::\n}'
line 15:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 18:7 no viable alternative at input '::x('
line 19:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 22:7 no viable alternative at input '::x('
line 23:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 27:9 no viable alternative at input '::a<b>\n::a<b,'
line 27:4 extraneous input '::' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 14 syntax errors

Testing DuplicateAccessor.kt...
line 3:4 no viable alternative at input '\nget()=0\nget'
line 2:4 extraneous input 'get' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing DynamicReceiver.kt...
Result: 0 syntax errors

Testing DynamicSoftKeyword.kt...
line 1:0 extraneous input 'dynamic' expecting {<EOF>, NL, '@', '@file', 'package', 'import', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 1 syntax errors

Testing DynamicTypes.kt...
Result: 0 syntax errors

Testing EmptyFile.kt...
Result: 0 syntax errors

Testing EmptyName.kt...
line 1:4 token recognition error at: '``'
line 1:6 extraneous input ':' expecting {NL, '(', '@', '<', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 3:4 token recognition error at: '``'
line 5:6 token recognition error at: '``'
line 5:9 mismatched input '{' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 7:5 token recognition error at: '``'
line 7:7 extraneous input '>' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'in', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 7:10 mismatched input '(' expecting {NL, ',', '>'}
line 11:9 token recognition error at: '``'
line 12:13 token recognition error at: '``'
line 11:12 no viable alternative at input 'for(in'
line 12:20 no viable alternative at input '(,y)='
line 13:4 extraneous input '}' expecting {NL, '.'}
line 14:0 extraneous input '}' expecting {NL, '.'}
Result: 8 syntax errors

Testing EnumCommas.kt...
Result: 0 syntax errors

Testing EnumEntryCommaAnnotatedMember.kt...
line 4:4 no viable alternative at input '\n\n@inline'
line 5:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing EnumEntryCommaInlineMember.kt...
line 4:11 mismatched input 'fun' expecting {NL, '}', ';'}
line 5:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing EnumEntryCommaMember.kt...
line 4:4 no viable alternative at input '\n\nfun'
line 5:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing EnumEntryCommaPublicMember.kt...
line 4:11 mismatched input 'fun' expecting {NL, '}', ';'}
line 5:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing EnumEntrySemicolonInlineMember.kt...
Result: 0 syntax errors

Testing EnumEntrySemicolonMember.kt...
Result: 0 syntax errors

Testing EnumEntrySpaceInlineMember.kt...
line 4:4 mismatched input 'inline' expecting {NL, '}', ';'}
line 5:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing EnumEntrySpaceMember.kt...
line 4:4 mismatched input 'fun' expecting {NL, '}', ';'}
line 5:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing EnumEntryTwoCommas.kt...
line 2:10 extraneous input ',' expecting {NL, '}', ';'}
Result: 1 syntax errors

Testing EnumIn.kt...
Result: 0 syntax errors

Testing EnumInline.kt...
Result: 0 syntax errors

Testing EnumInlinePublic.kt...
line 2:11 mismatched input 'public' expecting {NL, '}', ';'}
line 6:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing EnumMissingName.kt...
line 2:10 mismatched input '(' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 2:24 extraneous input ')' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing EnumOldConstructorSyntax.kt...
line 2:9 mismatched input ':' expecting {NL, '}', ';'}
line 5:0 no viable alternative at input 'x+1\n}'
line 5:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 3 syntax errors

Testing Enums.kt...
Result: 0 syntax errors

Testing EnumShortCommas.kt...
Result: 0 syntax errors

Testing EnumShortWithOverload.kt...
Result: 0 syntax errors

Testing EnumWithAnnotationKeyword.kt...
line 1:16 extraneous input 'enum' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 2:4 no viable alternative at input '\nD'
line 2:4 extraneous input 'D' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 5:16 extraneous input 'E1' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 7:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 5 syntax errors

Testing EOLsInComments.kt...
Result: 0 syntax errors

Testing EOLsOnRollback.kt...
line 6:4 no viable alternative at input 'classfoo\n\ntypealias'
line 11:4 no viable alternative at input '4\n\n1'
line 11:4 extraneous input '1' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 13:0 no viable alternative at input '\n}'
line 13:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 5 syntax errors

Testing Expressions_ERR.kt...
line 3:2 token recognition error at: ')'
line 3:6 token recognition error at: ')'
line 3:10 token recognition error at: '~'
line 6:2 token recognition error at: '~'
line 8:2 token recognition error at: ']'
line 3:3 no viable alternative at input 'if(true)returnelse{\ndfsd\n;;'
line 2:2 extraneous input 'dfsd' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing ExtensionsWithQNReceiver.kt...
Result: 0 syntax errors

Testing FileStart_ERR.kt...
line 1:0 extraneous input '/' expecting {<EOF>, NL, '@', '@file', 'package', 'import', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 1 syntax errors

Testing FloatingPointLiteral.kt...
Result: 0 syntax errors

Testing ForWithMultiDecl.kt...
line 8:9 no viable alternative at input 'for(val'
line 8:17 extraneous input 'in' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 9:20 extraneous input 'in' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 10:30 extraneous input 'in' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 11:25 extraneous input 'in' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 12:25 extraneous input 'in' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 14:17 extraneous input 'in' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 15:20 extraneous input 'in' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 16:30 extraneous input 'in' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 17:25 extraneous input 'in' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 18:25 extraneous input 'in' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 11 syntax errors

Testing FunctionCalls.kt...
line 8:2 no viable alternative at input '\n{'
line 8:2 extraneous input '{' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing FunctionExpressions.kt...
line 1:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 1:13 no viable alternative at input '()'
line 2:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 3:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 4:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 5:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 6:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 6:21 no viable alternative at input '@[a()]T.<'
line 8:10 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 8:15 no viable alternative at input '()'
line 9:10 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 10:10 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 10:22 no viable alternative at input '@[a]T.()'
line 11:10 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 12:10 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 12:23 no viable alternative at input '@[a()]T.<'
line 14:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 14:13 no viable alternative at input '()'
line 15:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 15:19 no viable alternative at input 'name()='
line 16:13 no viable alternative at input '@[a]fun'
line 18:8 mismatched input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 23:17 no viable alternative at input 'bar(fun@[a]T'
line 29:22 extraneous input '<' expecting {NL, '(', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 29:25 mismatched input ':' expecting {NL, '('}
line 31:25 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 32:26 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 27 syntax errors

Testing FunctionExpressions_ERR.kt...
line 1:12 token recognition error at: ')'
line 1:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 2:15 token recognition error at: ')'
line 2:0 no viable alternative at input '\nval'
line 2:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 4:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 4:27 no viable alternative at input '@[a]T.foo(a:)'
line 6:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 6:25 no viable alternative at input '@[a()]T.foo<>'
line 7:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 7:21 no viable alternative at input '@[a()]T.<'
line 9:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 9:21 no viable alternative at input 'T.foo<T,,'
line 9:19 no viable alternative at input 'T,'
line 10:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 10:18 no viable alternative at input 'T.foo<,'
Result: 14 syntax errors

Testing FunctionLiterals.kt...
Result: 0 syntax errors

Testing FunctionLiterals_ERR.kt...
line 2:6 no viable alternative at input '{->'
line 4:4 extraneous input '{' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing FunctionNoParameterList.kt...
line 3:4 no viable alternative at input 'foo\nclass'
line 5:0 no viable alternative at input 'bar\n}'
Result: 2 syntax errors

Testing Functions.kt...
line 2:12 mismatched input '(' expecting {NL, '.'}
line 5:16 mismatched input '<' expecting {NL, '.'}
line 8:12 mismatched input '(' expecting {NL, '.'}
line 11:16 mismatched input '<' expecting {NL, '.'}
line 14:12 mismatched input '(' expecting {NL, '.'}
line 17:16 mismatched input '<' expecting {NL, '.'}
line 19:16 mismatched input '<' expecting {NL, '.'}
Result: 7 syntax errors

Testing FunctionsWithoutName.kt...
line 4:6 no viable alternative at input 'T.<'
line 9:6 no viable alternative at input 'T.<'
line 14:13 extraneous input '<' expecting {NL, '(', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 14:16 extraneous input ':' expecting {NL, '('}
line 14:21 mismatched input ')' expecting ':'
line 14:23 extraneous input '->' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 15:13 extraneous input '<' expecting {NL, '(', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 15:16 mismatched input ':' expecting {NL, '('}
Result: 8 syntax errors

Testing FunctionsWithoutName_ERR.kt...
line 1:4 token recognition error at: ')'
line 2:0 no viable alternative at input '\nfun'
line 2:16 mismatched input ')' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 3:13 mismatched input '<' expecting {NL, '(', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 4:13 extraneous input '<' expecting {NL, '(', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 4:15 mismatched input ',' expecting {NL, '('}
line 5:13 mismatched input '<' expecting {NL, '(', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 6:13 extraneous input '<' expecting {NL, '(', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 6:15 mismatched input ',' expecting {NL, '('}
line 8:9 extraneous input '=' expecting {NL, '(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
Result: 9 syntax errors

Testing Functions_ERR.kt...
line 1:7 token recognition error at: ')'
line 2:0 no viable alternative at input 'foo\nfun'
line 2:14 mismatched input '(' expecting {NL, '.'}
line 3:16 mismatched input '<' expecting {NL, '.'}
line 4:16 mismatched input '<' expecting {NL, '.'}
line 5:16 mismatched input '<' expecting {NL, '.'}
line 6:22 mismatched input '(' expecting {NL, '.'}
line 8:12 extraneous input '=' expecting {NL, '(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 9:12 extraneous input ';' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 11:0 no viable alternative at input '\n\nfun'
line 11:14 mismatched input '(' expecting {NL, '.'}
line 12:11 mismatched input '<' expecting {NL, '.'}
line 13:10 no viable alternative at input 'A.<'
Result: 12 syntax errors

Testing FunctionTypes.kt...
Result: 0 syntax errors

Testing FunctionTypes_ERR.kt...
line 1:19 no viable alternative at input '(a,)'
Result: 1 syntax errors

Testing HangOnLonelyModifier.kt...
line 2:0 no viable alternative at input '\nin'
line 2:0 extraneous input 'in' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing IfWithPropery.kt...
Result: 0 syntax errors

Testing Imports.kt...
Result: 0 syntax errors

Testing ImportSoftKW.kt...
Result: 0 syntax errors

Testing Imports_ERR.kt...
line 3:6 missing {'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier} at '\n'
line 5:0 mismatched input 'import' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 33:7 token recognition error at: '^'
line 33:9 token recognition error at: '^'
Result: 2 syntax errors

Testing IncompleteFunctionLiteral.kt...
Result: 0 syntax errors

Testing Inner.kt...
Result: 0 syntax errors

Testing IntegerLiteral.kt...
line 12:10 no viable alternative at input 'array<Any>(1,0x1,0X1,0b1,0B1,1L,0x1L,0X1L,0b1L,0B1L,1l,'
Result: 1 syntax errors

Testing Interface.kt...
Result: 0 syntax errors

Testing InterfaceWithEnumKeyword.kt...
line 1:5 no viable alternative at input 'enuminterface'
line 1:15 extraneous input 'class' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 2:4 no viable alternative at input '\nD'
line 2:4 extraneous input 'D' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 6:4 no viable alternative at input '\nD'
line 6:4 extraneous input 'D' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 10:4 no viable alternative at input '\nD'
line 10:4 extraneous input 'D' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 8 syntax errors

Testing Labels.kt...
line 7:10 no viable alternative at input 'return@\nreturn@1'
line 7:2 extraneous input 'return@' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing LineCommentAfterFileAnnotations.kt...
Result: 0 syntax errors

Testing LineCommentForFirstDeclaration.kt...
Result: 0 syntax errors

Testing LineCommentsInBlock.kt...
Result: 0 syntax errors

Testing LocalDeclarations.kt...
line 7:8 no viable alternative at input 'outval'
line 10:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing LongPackageName.kt...
Result: 0 syntax errors

Testing ModifierAsSelector.kt...
Result: 0 syntax errors

Testing MultiVariableDeclarations.kt...
line 3:4 no viable alternative at input 'val'
line 4:4 no viable alternative at input 'val'
line 5:4 no viable alternative at input 'val'
line 6:4 no viable alternative at input 'val'
line 7:4 no viable alternative at input 'val'
line 8:4 no viable alternative at input 'var'
line 9:4 no viable alternative at input 'var'
line 10:4 no viable alternative at input 'var'
line 11:4 no viable alternative at input 'var'
line 12:4 no viable alternative at input 'var'
line 13:4 no viable alternative at input 'var'
line 15:4 mismatched input 'val' expecting {NL, ';'}
line 15:11 no viable alternative at input '()='
line 16:4 extraneous input 'val' expecting {NL, '.'}
line 16:14 no viable alternative at input '(,a)='
line 17:4 extraneous input 'val' expecting {NL, '.'}
line 17:12 no viable alternative at input '(a,)'
line 18:12 no viable alternative at input '(a,:'
line 19:12 no viable alternative at input '(a,:'
line 20:12 no viable alternative at input '(a,='
line 21:14 no viable alternative at input '(a,b='
line 22:9 no viable alternative at input '(1'
line 25:11 extraneous input ':' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 26:13 extraneous input ':' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 31:10 extraneous input ':' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 36:14 extraneous input ':' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 26 syntax errors

Testing NamedClassObject.kt...
Result: 0 syntax errors

Testing namelessObjectAsEnumMember.kt...
line 6:10 extraneous input 'object' expecting {NL, '@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'protected', 'internal', 'sealed', 'annotation', 'data', 'inner', 'abstract', 'final', 'open', LabelReference}
line 7:0 extraneous input '}' expecting {NL, '@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'protected', 'internal', 'sealed', 'annotation', 'data', 'inner', 'abstract', 'final', 'open', LabelReference}
Result: 2 syntax errors

Testing NestedComments.kt...
Result: 0 syntax errors

Testing NewlinesInParentheses.kt...
line 23:2 mismatched input 'when' expecting {NL, ';'}
line 24:4 extraneous input 'is' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 38:0 no viable alternative at input '\n}'
line 38:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 4 syntax errors

Testing NewLinesValidOperations.kt...
Result: 0 syntax errors

Testing NonTypeBeforeDotInBaseClass.kt...
line 2:18 mismatched input 'super' expecting {NL, '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 4:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing NotIsAndNotIn.kt...
Result: 0 syntax errors

Testing ObjectLiteralAsStatement.kt...
Result: 0 syntax errors

Testing ParameterNameMising.kt...
line 1:13 mismatched input '<' expecting ':'
line 6:13 mismatched input '<' expecting ':'
line 6:33 no viable alternative at input 'array(""))'
line 8:4 no viable alternative at input '42\nx'
line 8:4 extraneous input 'x' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 5 syntax errors

Testing ParameterType.kt...
line 1:11 mismatched input ')' expecting ':'
line 2:12 mismatched input '=' expecting ':'
line 2:15 no viable alternative at input '4)'
line 5:27 mismatched input ')' expecting ':'
line 6:16 mismatched input ')' expecting ':'
line 17:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 18:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 18:15 no viable alternative at input '(b='
line 19:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
Result: 9 syntax errors

Testing ParameterType_ERR.kt...
line 1:12 mismatched input ')' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 3:21 missing ':' at '('
line 5:13 missing ':' at '('
line 6:14 mismatched input ')' expecting ':'
line 15:12 no viable alternative at input 'catch(a:)'
line 17:4 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 20:8 extraneous input 'fun' expecting {NL, '(', '{', '+', '-', '++', '--', '!', '::', '?::', '@', RETURN_AT, CONTINUE_AT, BREAK_AT, '@file', 'import', 'object', 'constructor', 'by', 'companion', 'init', 'this', 'super', 'where', 'if', 'when', 'try', 'catch', 'finally', 'for', 'do', 'while', 'throw', 'return', 'continue', 'break', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', QUOTE_OPEN, '"""', RealLiteral, LongLiteral, IntegerLiteral, HexLiteral, BinLiteral, BooleanLiteral, 'null', Identifier, LabelReference, LabelDefinition, CharacterLiteral}
line 20:15 no viable alternative at input '(b:)'
line 22:10 no viable alternative at input '(a:)'
line 24:9 mismatched input ')' expecting ':'
line 25:10 mismatched input ')' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
Result: 11 syntax errors

Testing Precedence.kt...
line 2:5 no viable alternative at input 'b().'
line 3:2 extraneous input 'x' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing PrimaryConstructorModifiers_ERR.kt...
line 3:22 no viable alternative at input 'private{'
line 5:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 11:28 no viable alternative at input 'private('
Result: 3 syntax errors

Testing Properties.kt...
Result: 0 syntax errors

Testing PropertiesFollowedByInitializers.kt...
line 2:18 extraneous input '=' expecting {NL, '}', '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'constructor', 'companion', 'init', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'suspend', 'override', 'abstract', 'final', 'open', 'lateinit', LabelReference}
line 3:2 extraneous input 'var' expecting {NL, '}'}
line 3:25 extraneous input 'set' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 4:26 extraneous input 'set' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 6:2 no viable alternative at input 'get\ninit'
line 6:2 extraneous input 'init' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 9:19 extraneous input '{' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 12:20 extraneous input 'init' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 15:28 extraneous input 'set' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 16:2 extraneous input 'var' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 16:15 extraneous input 'get' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 16:33 extraneous input 'set' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 17:2 extraneous input 'var' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 17:15 extraneous input 'get' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 17:33 extraneous input '{' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 18:2 extraneous input 'var' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 18:15 extraneous input 'get' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 18:31 extraneous input 'set' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 19:2 extraneous input 'var' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 19:15 extraneous input 'get' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 19:31 extraneous input '{' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 20:0 extraneous input '}' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 22:0 extraneous input 'class' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
Result: 23 syntax errors

Testing Properties_ERR.kt...
line 1:4 mismatched input '-' expecting {NL, '(', '@', '<', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 2:6 extraneous input '{' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 3:7 mismatched input '\n' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 4:9 mismatched input '\n' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 5:4 extraneous input ':' expecting {NL, '(', '@', '<', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 6:0 no viable alternative at input '\nval'
line 6:4 extraneous input ':' expecting {NL, '(', '@', '<', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 7:12 no viable alternative at input '@[afoo='
line 9:0 extraneous input 'val' expecting {NL, '(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 9:7 extraneous input '.' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 10:13 extraneous input '=' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 12:3 no viable alternative at input '.barpublic'
line 12:3 extraneous input 'public' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 15:8 mismatched input '-' expecting {NL, '(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 18:4 extraneous input 'get' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 15 syntax errors

Testing PropertyInvokes.kt...
Result: 0 syntax errors

Testing QuotedIdentifiers.kt...
Result: 0 syntax errors

Testing Reserved.kt...
line 2:4 extraneous input 'typeof' expecting {NL, '(', '@', '<', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 6:4 no viable alternative at input 'yield\ntypeof'
line 6:4 extraneous input 'typeof' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 3 syntax errors

Testing SemicolonAfterIf.kt...
Result: 0 syntax errors

Testing semicolonBetweenDeclarations.kt...
line 4:9 no viable alternative at input '1;;'
line 16:27 extraneous input ';' expecting {NL, '{'}
line 18:4 extraneous input 'companion' expecting {NL, '{'}
line 21:7 no viable alternative at input 'foo;'
line 22:3 extraneous input ';' expecting {NL, '(', '@', '<', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 23:0 no viable alternative at input '\nclass'
line 24:7 extraneous input ';' expecting {NL, '(', '@', '<', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 26:15 extraneous input ';' expecting {NL, '('}
line 27:0 extraneous input '}' expecting {NL, '('}
Result: 9 syntax errors

Testing SimpleClassMembers.kt...
line 16:8 no viable alternative at input '\n\ntypealias'
line 16:8 extraneous input 'typealias' expecting {NL, '}', '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'constructor', 'companion', 'init', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'suspend', 'override', 'abstract', 'final', 'open', 'lateinit', LabelReference}
line 17:4 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 48:8 no viable alternative at input '\n\ntypealias'
line 48:8 extraneous input 'typealias' expecting {NL, '}', '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'constructor', 'companion', 'init', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'suspend', 'override', 'abstract', 'final', 'open', 'lateinit', LabelReference}
line 49:4 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 59:4 extraneous input 'companion' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 63:12 no viable alternative at input 'privatecompanion'
line 67:12 no viable alternative at input 'privatecompanion'
line 71:12 no viable alternative at input 'privatecompanion'
line 75:12 no viable alternative at input 'privatecompanion'
line 78:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 12 syntax errors

Testing SimpleClassMembers_ERR.kt...
line 3:17 extraneous input '-' expecting {NL, '}', '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'constructor', 'companion', 'init', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'suspend', 'override', 'abstract', 'final', 'open', 'lateinit', LabelReference}
line 5:4 extraneous input 'class' expecting {NL, '}'}
line 6:4 no viable alternative at input '\nsdfsd'
line 6:4 extraneous input 'sdfsd' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 15:20 extraneous input ';' expecting {NL, '(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 16:0 extraneous input '}' expecting {NL, '(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
Result: 6 syntax errors

Testing SimpleExpressions.kt...
line 24:26 no viable alternative at input 'object:Foo{'
line 24:28 extraneous input ',' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing SimpleModifiers.kt...
line 7:0 extraneous input 'override' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 11:0 extraneous input 'protected' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 14:0 no viable alternative at input 'internal\nin'
line 17:8 no viable alternative at input '\nopen'
line 18:8 extraneous input 'enum' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 21:8 extraneous input 'override' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 25:8 extraneous input 'protected' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 28:8 no viable alternative at input 'internal\nin'
line 44:0 no viable alternative at input '\n}'
line 44:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 10 syntax errors

Testing SoftKeywords.kt...
line 5:7 no viable alternative at input 'publicprotected'
line 10:0 extraneous input 'override' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 14:0 extraneous input 'protected' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 17:0 no viable alternative at input 'internal\nin'
line 20:1 extraneous input 'class' expecting {'@', '@file', 'fun', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'tailrec', 'operator', 'inline', 'external', 'suspend', LabelReference}
line 20:30 extraneous input 'enum' expecting {NL, ',', '>'}
line 20:48 extraneous input ',' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 21:11 extraneous input 'protected' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 23:4 extraneous input 'enum' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 26:4 extraneous input 'override' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 30:4 extraneous input 'protected' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 33:1 extraneous input '>' expecting {'@', '@file', 'class', 'interface', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'sealed', 'annotation', 'data', 'abstract', 'final', 'open', LabelReference}
line 34:11 extraneous input 'protected' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 63:8 extraneous input 'const' expecting {NL, '(', '@', '<', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 64:4 no viable alternative at input '\nval'
line 64:8 extraneous input 'suspend' expecting {NL, '(', '@', '<', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 65:4 no viable alternative at input '\nval'
line 70:11 no viable alternative at input 'publicprotected'
line 100:8 extraneous input 'const' expecting {NL, '(', '@', '<', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 100:20 extraneous input 'const' expecting {NL, '(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 102:4 extraneous input 'fun' expecting {NL, '(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 133:11 missing ':' at 'protected'
line 133:21 extraneous input 'private' expecting {',', ')'}
line 146:5 extraneous input ')' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 182:11 missing ':' at 'protected'
line 182:21 extraneous input 'private' expecting {',', ')'}
line 194:0 extraneous input ')' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 27 syntax errors

Testing SoftKeywordsInTypeArguments.kt...
line 8:0 no viable alternative at input 'Foo<outInt>\n\n}'
line 8:0 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing StringTemplates.kt...
line 13:5 token recognition error at: '$"'
line 19:25 no viable alternative at input '"foo${bar+map{foo}}sdfsdf'
line 20:4 extraneous input '"' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing Super.kt...
line 4:4 no viable alternative at input '\nsuper'
line 4:4 extraneous input 'super' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing test.kt...
Result: 0 syntax errors

Testing TraitConstructor.kt...
Result: 0 syntax errors

Testing TripleDot.kt...
line 1:0 extraneous input '...' expecting {<EOF>, NL, '@', '@file', 'package', 'import', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 1 syntax errors

Testing TryRecovery.kt...
line 10:4 no viable alternative at input 'try{\n}catch({}try'
line 7:4 extraneous input '}' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing TypeAlias.kt...
Result: 0 syntax errors

Testing TypealiasIsKeyword.kt...
line 1:4 mismatched input 'typealias' expecting {NL, '(', '@', '<', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 1:14 mismatched input '=' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
Result: 2 syntax errors

Testing TypeAlias_ERR.kt...
line 2:0 extraneous input 'typealias' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 3:0 no viable alternative at input '\ntypealias'
line 4:0 extraneous input 'typealias' expecting {NL, '(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 4:10 extraneous input ';' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 5:0 extraneous input 'typealias' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 5:14 extraneous input ';' expecting {NL, '=', '<'}
line 6:0 no viable alternative at input '\ntypealias'
line 6:16 extraneous input ';' expecting {NL, '(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 7:0 extraneous input 'typealias' expecting {NL, '(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 7:10 extraneous input '=' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 8:0 no viable alternative at input '\ntypealias'
line 8:10 extraneous input '=' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 9:0 extraneous input 'typealias' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 9:10 extraneous input '=' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 9:16 extraneous input ';' expecting {NL, '=', '<'}
line 10:0 no viable alternative at input '\ntypealias'
line 10:10 mismatched input '=' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 12:14 mismatched input '>' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'in', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 13:17 mismatched input '>' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'in', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 14:18 extraneous input ',' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 17:0 extraneous input 'typealias' expecting {NL, 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', 'get', 'set', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier}
line 17:14 extraneous input '=' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 22 syntax errors

Testing TypeConstraints.kt...
Result: 0 syntax errors

Testing TypeExpressionAmbiguities_ERR.kt...
line 3:16 no viable alternative at input 'fooo<Double?addddd'
line 4:4 extraneous input 'dd' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors

Testing TypeModifiers.kt...
line 1:8 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 2:8 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 2:20 extraneous input '->' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 3:8 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 3:31 extraneous input 'a' expecting {'@', '@file', 'fun', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'tailrec', 'operator', 'inline', 'external', 'suspend', LabelReference}
line 4:8 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 6:17 no viable alternative at input '(suspenda'
line 8:13 no viable alternative at input 'a<insuspend'
line 8:21 extraneous input 'a' expecting {'@', '@file', 'fun', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'tailrec', 'operator', 'inline', 'external', 'suspend', LabelReference}
line 9:9 extraneous input '<' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 9:25 extraneous input 'a' expecting {'@', '@file', 'fun', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'tailrec', 'operator', 'inline', 'external', 'suspend', LabelReference}
line 10:9 extraneous input '<' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 10:28 extraneous input 'a' expecting {'@', '@file', 'fun', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'tailrec', 'operator', 'inline', 'external', 'suspend', LabelReference}
line 11:9 extraneous input '<' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 11:32 extraneous input 'a' expecting {'@', '@file', 'fun', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'tailrec', 'operator', 'inline', 'external', 'suspend', LabelReference}
line 12:9 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 13:9 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 14:12 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 14:20 extraneous input 'a' expecting {'@', '@file', 'fun', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'tailrec', 'operator', 'inline', 'external', 'suspend', LabelReference}
line 15:12 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 15:23 extraneous input 'a' expecting {'@', '@file', 'fun', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'tailrec', 'operator', 'inline', 'external', 'suspend', LabelReference}
line 16:14 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 16:27 extraneous input 'a' expecting {'@', '@file', 'fun', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'tailrec', 'operator', 'inline', 'external', 'suspend', LabelReference}
line 17:9 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 17:26 no viable alternative at input '(suspend('
Result: 25 syntax errors

Testing TypeModifiersParenthesized.kt...
line 2:5 mismatched input '<' expecting {NL, '.'}
line 5:24 extraneous input '?' expecting {',', ')'}
line 8:27 mismatched input '<' expecting {',', ')'}
line 11:26 extraneous input '?' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 14:43 extraneous input '?' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 20:33 extraneous input '?' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 22:30 extraneous input '->' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 23:30 extraneous input '?' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 29:27 extraneous input '?' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 31:14 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 32:15 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 34:16 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 35:26 no viable alternative at input '(suspend('
line 37:19 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 38:29 no viable alternative at input '(suspendAny'
line 40:28 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 41:38 no viable alternative at input '(suspend('
line 43:28 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 44:38 no viable alternative at input '(suspendAny'
line 46:28 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 47:38 no viable alternative at input '(suspend('
line 49:28 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 50:38 no viable alternative at input '(suspendAny'
Result: 23 syntax errors

Testing TypeModifiers_ERR.kt...
line 1:8 mismatched input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 2:0 extraneous input 'val' expecting {'@', '@file', 'fun', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'tailrec', 'operator', 'inline', 'external', 'suspend', LabelReference}
line 2:8 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 2:20 extraneous input '->' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 3:8 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 3:26 extraneous input '->' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 4:8 extraneous input 'suspend' expecting {'(', '@', '@file', 'import', 'constructor', 'by', 'companion', 'init', 'where', 'catch', 'finally', 'out', '@field', '@property', '@get', '@set', 'get', 'set', '@receiver', '@param', '@setparam', '@delegate', 'dynamic', 'public', 'private', 'protected', 'internal', 'enum', 'sealed', 'annotation', 'data', 'inner', 'tailrec', 'operator', 'inline', 'infix', 'external', 'override', 'abstract', 'final', 'open', 'lateinit', 'vararg', 'noinline', 'crossinline', 'reified', Identifier, LabelReference}
line 4:25 no viable alternative at input '(suspend->'
line 5:16 extraneous input '(' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 6:16 extraneous input 'a' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 7:16 extraneous input 'a' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 8:9 extraneous input '<' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 9:21 no viable alternative at input 'a<insuspenda'
line 11:10 extraneous input '<' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 12:10 extraneous input '<' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 15 syntax errors

Testing TypeParametersBeforeName.kt...
line 2:19 mismatched input '(' expecting {NL, '.'}
Result: 1 syntax errors

Testing When.kt...
line 38:8 no viable alternative at input 'when(val'
line 38:17 no viable alternative at input 'e)'
line 39:4 extraneous input 'is' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
line 52:8 no viable alternative at input 'when(val'
line 52:17 no viable alternative at input 'e)'
line 53:4 extraneous input 'is' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 6 syntax errors

Testing When_ERR.kt...
line 5:8 no viable alternative at input 'when(e){\nis->'
line 5:4 extraneous input 'is' expecting {<EOF>, '@', '@file', 'class', 'interface', 'fun', 'object', 'val', 'var', 'typealias', '@field', '@property', '@get', '@set', '@receiver', '@param', '@setparam', '@delegate', 'public', 'private', 'internal', 'enum', 'sealed', 'annotation', 'data', 'tailrec', 'operator', 'inline', 'external', 'suspend', 'abstract', 'final', 'open', 'const', LabelReference}
Result: 2 syntax errors
